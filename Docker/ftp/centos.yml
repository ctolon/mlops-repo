version: '3'


networks:
  net:
    driver: bridge
    ipam:
      config:
        - subnet: 10.5.0.0/16
          gateway: 10.5.0.1
          ip_range: 10.5.0.0/24
services:
  ftp:
    container_name: ftp_mlflow
    image: fauria/vsftpd
    #fauria/vsftpd
    #delfer/alpine-ftp-server
    environment:
      #- PASV_ADDRESS=127.0.0.1
      - FTP_USER=${FTP_USER_NAME}
      - FTP_PASS=${FTP_USER_PASS}
      #- FTP_PASSWORD=${FTP_USER_PASS}
      #- HOST=127.0.0.1
      - ADDRESS=10.5.0.3
      #- MIN_PORT=30000
      #- MAX_PORT=30009
      - PASV_MIN_PORT=30000
      - PASV_MAX_PORT=30009
      #- LOCAL_UMASK=777
      #- FILE_OPEN_MODE=777
      - PASV_ADDR_RESOLVE=YES
      - PASV_ADDRESS=10.5.0.3
    networks:
      net:
        ipv4_address: 10.5.0.3
    ports:
      - "21:21"
      - "20:20"
      - "30000-30009:30000-30009"

  postgresql:
    build:
      context: ./docker/postgres
      dockerfile: Dockerfile
      args:
        - POSTGRESQL_VERSION=$POSTGRESQL_VERSION
    image: postgresql-shm:5.7.32
    container_name: postgresql-shm
    hostname: postgresql
    environment:
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_HOST_AUTH_METHOD=$POSTGRES_HOST_AUTH_METHOD
      - COMPOSE_HTTP_TIMEOUT=120
    ports:
      - "3307:3306"
    volumes:
      - $PWD/container_data/postgresql:/var/lib/postgresql
      - $PWD/docker/postgres/init:/docker-entrypoint-initdb.d
    cap_add: 
      - SYS_NICE # CAP_SYS_NICE

  mlflow:
    build:
      context: ./docker/mlflow
      dockerfile: Dockerfile
      args:
        - MLFLOW_ARTIFACT_DIR=$MLFLOW_ARTIFACT_DIR
        - MLFLOW_TRACKING_URI=$MLFLOW_TRACKING_URI
    container_name: mlflow-tracking_postgres
    image: mlflow-tracking:1.12.1
    hostname: mlflow-tracking
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - MLFLOW_ARTIFACT_URI=${MLFLOW_ARTIFACT_DIR}
      - MLFLOW_TRACKING_URI=${MLFLOW_TRACKING_URI}
    depends_on:
      - postgresql
      - ftp
    links:
      - "postgresql:postgresql"
      - "ftp:ftp"
    ports:
      - "5000:5000"
    volumes:
      - /home/ctolon/ftp-user:/home/username/mlruns

#networks:
  #A:
    #driver: bridge
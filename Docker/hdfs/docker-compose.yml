version: '3'
services:
  postgresql:
    build:
      context: .
      dockerfile: Dockerfile.postgres
      args:
        - POSTGRESQL_VERSION=$POSTGRESQL_VERSION
    image: postgresql-shm:5.7.32
    container_name: postgresql-shm
    hostname: postgresql
    environment:
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_HOST_AUTH_METHOD=$POSTGRES_HOST_AUTH_METHOD
      - COMPOSE_HTTP_TIMEOUT=120
    ports:
      - "3307:3306"
    volumes:
      - $PWD/container_data/postgresql:/var/lib/postgresql
      - $PWD/conf/postgresql/init:/docker-entrypoint-initdb.d
    cap_add: 
      - SYS_NICE # CAP_SYS_NICE

  mlflow:
    build:
      context: .
      dockerfile: Dockerfile.mlflow
      args:
        - MLFLOW_ARTIFACT_DIR=$MLFLOW_ARTIFACT_DIR
        - MLFLOW_TRACKING_URI=$MLFLOW_TRACKING_URI
    container_name: mlflow-tracking_postgres
    image: mlflow-tracking:1.12.1
    hostname: mlflow-tracking
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - MLFLOW_ARTIFACT_URI=${MLFLOW_ARTIFACT_DIR}
      - MLFLOW_TRACKING_URI=${MLFLOW_TRACKING_URI}
      - FTP_USER_NAME=${FTP_USER_NAME}
      - FTP_USER_PASS=${FTP_USER_PASS}
      - FTP_USER_HOME=${FTP_USER_HOME}
    depends_on:
      - postgresql
    links:
      - "postgresql:postgresql"
    ports:
      - "5000:5000"
    volumes:
      - /home/ctolon/ftp-user:/home/username/mlruns


  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    restart: always
    ports:
      - 9870:9870
      - 9000:9000
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
    environment:
      - CLUSTER_NAME=test
    env_file:
      - ./hadoop.env

  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode
    restart: always
    volumes:
      - hadoop_datanode:/hadoop/dfs/data
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
    env_file:
      - ./hadoop.env
  
  resourcemanager:
    image: bde2020/hadoop-resourcemanager:2.0.0-hadoop3.2.1-java8
    container_name: resourcemanager
    restart: always
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864"
    env_file:
      - ./hadoop.env

  nodemanager1:
    image: bde2020/hadoop-nodemanager:2.0.0-hadoop3.2.1-java8
    container_name: nodemanager
    restart: always
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088"
    env_file:
      - ./hadoop.env
  
  historyserver:
    image: bde2020/hadoop-historyserver:2.0.0-hadoop3.2.1-java8
    container_name: historyserver
    restart: always
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088"
    volumes:
      - hadoop_historyserver:/hadoop/yarn/timeline
    env_file:
      - ./hadoop.env
  
volumes:
  hadoop_namenode:
  hadoop_datanode:
  hadoop_historyserver:


